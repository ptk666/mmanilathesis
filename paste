<template>
  <div
    align="center"
  >
    <v-card
      width="1000"
      class="mt-5 elevation-3"
    >
      <v-card-title
        class="text-uppercase"
      >
        <em>Pending Bookings</em>
      </v-card-title>
        <v-data-table
        v-for="(data, i) in datas"
        :key="i"
        :headers="headers"
        :items="data"
        :loading="loading"
        >
        <!-- <template
          #item.booked="{ item }"
        >
          <v-btn
            small
          >Booked</v-btn>
        </template> -->
        <!-- <template
          #item.actions="{ item }"
        >
        <v-icon
          small
          class="mr-2"
          @click="editItem(item)"
        >
          mdi-pencil
        </v-icon>
        <v-icon
          small       
          @click="deleteItem(item)"   
        >
          mdi-delete
        </v-icon>
      </template> -->
        </v-data-table>
    </v-card>
  </div>
  
</template>

<script>
import axios from 'axios'
export default {
  data() {
    return {
      headers: [
        {
          text: 'ID',
          align: 'start',
          sortable: true,
          value: 'id' 
        },
        {
          text: 'Reference Number',
          value: 'Reference_Number',
          sortable: false
        },
        {
          text: 'Book Date',
          value: 'date',
          sortable: true
        },
        {
          text: 'Book Time',
          value: 'time',
          sortable: false
        },
        {
          text: 'Theme',
          value: 'game',
          sortable: false
        },
        {
          text: 'Persons',
          value: 'maxpax',
          sortable: false
        },
        {
          text: 'Venue',
          value: 'venue',
          sortable: false
        },
        {
          text: 'Booked',
          value: 'booked',
          sortable: false
        },
        {
          text: 'Actions',
          value: 'actions',
          sortable: false
        }
      ],
      datas: [{
        id: '',
        Reference_Number:'',
        date: '',
        time: '',
        game: '',
        maxpax: '',
        venue: ''
      }],
      editedItem: {
        date: '',
        time: '',
        game: '',
        maxpax: '',
        venue: ''
      },
      defaultItem: {
        bookDate: '',
        bookTime: '',
        theme: '',
        maxpax: '',
        venue: ''
      }
    }
  },
  methods: {
    getDatas() {
      axios.get('http://murder-manila/api/Pendings', {
        headers: {'Authorization' : 'Bearer ' + localStorage.getItem('token')}
      })
        .then(res => {
            this.datas = res.data;
        });
    },
  },
  computed: {

},
  watch: {
    
  },
  created() {
    this.getDatas();
    axios.defaults.headers.common["Authorization"] = "Bearer " + localStorage.getItem('token');
  }

}
</script>

<style>

</style>




















<template>
  <div align="center">
    <v-card width="1000" class="mt-5 elevation-3">
      <v-card-title class="text-uppercase">
        <em>Pending Bookings</em>
      </v-card-title>
      <v-data-table :headers="headers" :items="datas">
        <v-dialog v-model="dialog" max-width="500px">
          <template #activator="{ on, attrs }">
            <v-btn color="primary" class="mb-2" v-bind="attrs" v-on="on">
              Dummy
            </v-btn>
          </template>
          <v-card>
            <v-card-title> Edit Item </v-card-title>
            <v-card-text>
              <v-container>
                <v-row>
                  <v-col cols="12" sm="6" md="4">
                    <v-text-field
                      v-model="editedItem.date"
                      label="Date"
                    ></v-text-field>
                  </v-col>
                  <v-col cols="12" sm="6" md="4">
                    <v-text-field
                      v-model="editedItem.time"
                      label="Time"
                    ></v-text-field>
                  </v-col>
                  <v-col cols="12" sm="6" md="4">
                    <v-text-field
                      v-model="editedItem.game"
                      label="Time"
                    ></v-text-field>
                  </v-col>
                  <v-col cols="12" sm="6" md="4">
                    <v-text-field
                      v-model="editedItem.maxpax"
                      label="# of Players"
                    ></v-text-field>
                  </v-col>
                  <v-col cols="12" sm="6" md="4">
                    <v-text-field
                      v-model="editedItem.venue"
                      label="Venue"
                    ></v-text-field>
                  </v-col>
                </v-row>
              </v-container>
            </v-card-text>
            <v-card-actions>
              <v-spacer></v-spacer>
              <v-btn text> Cancel </v-btn>
              <v-btn text> Save </v-btn>
            </v-card-actions>
          </v-card>
        </v-dialog>
        <v-dialog
          v-model="dialogDelete"
          max-width="500px"
        >
          <v-card>
            <v-card-title>
              Are you sure this reservation is cancelled?
            </v-card-title>
            <v-card-actions>
              <v-spacer></v-spacer>
              <v-btn
                text
              >
                Cancel
              </v-btn>
              <v-btn
                text
              >
                Yes
              </v-btn>
              <v-spacer></v-spacer>
            </v-card-actions>
          </v-card>
        </v-dialog>
        <template
          #item.actions
        >
          <v-icon
            small
            class="mr-2"
          >
            mdi-pencil
          </v-icon>
          <v-icon
            small
          >
            mdi-delete
          </v-icon>
        </template>
        <template
          #no-data
        >
          <v-btn
            color="primary"
          >
            Reset
          </v-btn>
        </template>
      </v-data-table>
    </v-card>
  </div>
</template>

<script>
import axios from "axios";
export default {
  data() {
    return {
      dialog: false,
      dialogDelete: false,
      headers: [
        {
          text: "ID",
          align: "start",
          sortable: true,
          value: "id",
        },
        {
          text: "Reference Number",
          value: "Reference_Number",
          sortable: false,
        },
        {
          text: "Book Date",
          value: "date",
          sortable: true,
        },
        {
          text: "Book Time",
          value: "time",
          sortable: false,
        },
        {
          text: "Theme",
          value: "game",
          sortable: false,
        },
        {
          text: "Persons",
          value: "maxpax",
          sortable: false,
        },
        {
          text: "Venue",
          value: "venue",
          sortable: false,
        },
        {
          text: "Booked",
          value: "booked",
          sortable: false,
        },
        {
          text: "Actions",
          value: "actions",
          sortable: false,
        },
      ],
      datas: [
        {
          id: "",
          Reference_Number: "",
          date: "",
          time: "",
          game: "",
          maxpax: "",
          venue: "",
        },
      ],
      editedItem: {
        date: "",
        time: "",
        game: "",
        maxpax: "",
        venue: "",
      },
    };
  },
  methods: {
    initialize() {
      axios
        .get("http://murder-manila/api/Pendings", {
          headers: { Authorization: "Bearer " + localStorage.getItem("token") },
        })
        .then((res) => {
          this.datas = res.data.data;
        });
    },
  },
  created() {
    this.initialize();
  },
};
</script>

<style>
</style>

















EMPLOYEESTABLE

<template>
  <div align="center" class="mb-10">
    <v-card width="1000">
      <v-card-title> Employees </v-card-title>
      <v-card-text>
        <v-data-table 
          :headers="headers" 
          :items="employees"
        >
           
        </v-data-table>
      </v-card-text>
    </v-card>
  </div>
</template>

<script>
import axios from 'axios'
export default {
  data() {
    return {
      headers: [
        {
          text: "ID",
          align: "start",
          sortable: false,
          value: "id",
        },
        {
          text: "First Name",
          sortable: false,
          value: "fname",
        },
        {
          text: "Last Name",
          value: "lname",
          sortable: false,
        },
        {
          text: 'Email',
          value: 'email',
          sortable: false
        },
        {
          text: 'Access Name',
          value: 'access_name',
          sortable: true
        },
        {
          text: 'Actions',
          value: 'actions'
        }
      ],
      employees: [{
        id: '',
        fname: '',
        lname: '',
        email: '',
        access_name: ''
      }],
    }
  },
  methods: {
    getEmployees() {
      axios.get('http://murder-manila/api/AdminList', {
        headers: {'Authorization' : 'Bearer ' + localStorage.getItem('token')}
      })
        .then(res => {
          this.employees = res.data.data;
        })
    }
  },
  created() {
    this.getEmployees();
  }
};
</script>

<style scoped>
</style>































CALENDAR

<template>
  <div
    align="center"
  >
    <v-card
      width="1000"
      class="mt-10 elevation-3"
    >
      <v-row>
        <v-col>
          <v-sheet height="400">
            <v-calendar
              ref="calendar"
              :now="today"
              :value="today"
              :events="events"
              color="primary"
              type="day"
            ></v-calendar>
          </v-sheet>
        </v-col>
      </v-row>
    </v-card>
  </div>
</template>

<script>
import axios from 'axios'
import moment from 'moment'
  export default {
    data: () => ({
      today: '',
      events: [
        {
          start: '',
          end: '',
        }
      ],
      formattedTime: ''
    }),
    mounted () {
      this.$refs.calendar.scrollToTime('08:00')    
    },
    methods: {
      dateToday() {
        this.today = new Date().toISOString().substr(0, 10)
      },
      getBookings() {
        const dateToday = new Date().toISOString().substr(0, 10);
        axios.post('http://murder-manila/api/dailyBookings', {
          book_date: dateToday
        })
          .then(res => {
            this.events = res.data.data
            const startDate = res.data.data[0].start
            const startTime = (res.data.data[0].time).substr(0, 5)
            const finalTime = `${startDate} ${startTime}`
            return this.formattedTime = finalTime;          
          })
      }
    },
    created() {
      this.getBookings();
    }
  }
</script>































DATE PICKER 

<template>
  <div
    align="center"
  >
    <v-card
      width="1000"
      class="mt-10 elevation-3"
    >
      <v-date-picker
        v-model="today"
        class="mt-4"
        full-width
        color="red"
        no-title
        readonly
        :events="events"
      ></v-date-picker>
    </v-card>
  </div>
</template>


<script>
import axios from 'axios'
import moment from 'moment'
  export default {
    data: () => ({
      today: '',
      events: [
        {
          start: '',
          end: '',
        }
      ],
      formattedTime: ''
    }),
    mounted () {
     
    },
    methods: {
      dateToday() {
        this.today = new Date().toISOString().substr(0, 10)
      },
      getBookings() {
        const dateToday = new Date().toISOString().substr(0, 10);
        axios.post('http://murder-manila/api/dailyBookings', {
          book_date: dateToday
        })
          .then(res => {
            this.events = res.data.data     
          })
      }
    },
    created() {
      this.getBookings();
    }
  }
</script>

















































<template>
  <div
    align="center"
  >
    <v-card
      width="1000"
      class="mt-10 elevation-3"
    >
      <v-row>
        <v-col>
          <v-sheet height="400">
            <v-calendar
              ref="calendar"
              :now="today"
              :value="today"
              :events="events"
              color="primary"
              type="month"         
            ></v-calendar>
          </v-sheet>
        </v-col>
      </v-row>
    </v-card>
  </div>
</template>

<script>
import axios from 'axios'
import moment from 'moment'
  export default {
    data: () => ({
      today: '',
      events: [
        {
          start: '',
          end: '',
        }
      ],
      formattedTime: ''
    }),
    mounted () {
      this.$refs.calendar.scrollToTime('08:00')    
    },
    methods: {
      dateToday() {
        this.today = new Date().toISOString().substr(0, 10)
      },
      getBookings() {
        const dateToday = new Date().toISOString().substr(0, 10);
        axios.post('http://murder-manila/api/dailyBookings', {
          book_date: dateToday
        })
          .then(res => {
            this.events = res.data.data
            const startDate = res.data.data[0].start
            const startTime = (res.data.data[0].time).substr(0, 5)
            const finalTime = `${startDate} ${startTime}`
            return this.formattedTime = finalTime;          
          })
      }
    },
    created() {
      this.getBookings();
    }
  }
</script>




































CALENDAR

<template>
  <div align="center">
    <v-card width="1000" class="mt-5 elevation-3">
      <v-sheet height="64">
        <v-toolbar flat>
          <v-btn outlined class="mr-4" color="grey darken-2" @click="setToday">
            Today
          </v-btn>
          <v-btn fab text small color="grey darken-2" @click="prev">
            <v-icon small> mdi-chevron-left </v-icon>
          </v-btn>
          <v-btn fab text small color="grey darken-2" @click="next">
            <v-icon small> mdi-chevron-right </v-icon>
          </v-btn>
          <v-toolbar-title v-if="$refs.calendar">
            {{ $refs.calendar.title }}
          </v-toolbar-title>
          <v-spacer></v-spacer>
          <v-menu bottom right>
            <template v-slot:activator="{ on, attrs }">
              <v-btn outlined color="grey darken-2" v-bind="attrs" v-on="on">
                <span>{{ typeToLabel[type] }}</span>
                <v-icon right> mdi-menu-down </v-icon>
              </v-btn>
            </template>
            <v-list>
              <v-list-item @click="type = 'day'">
                <v-list-item-title>Day</v-list-item-title>
              </v-list-item>
              <v-list-item @click="type = 'week'">
                <v-list-item-title>Week</v-list-item-title>
              </v-list-item>
              <v-list-item @click="type = 'month'">
                <v-list-item-title>Month</v-list-item-title>
              </v-list-item>
              <v-list-item @click="type = '4day'">
                <v-list-item-title>4 days</v-list-item-title>
              </v-list-item>
            </v-list>
          </v-menu>
        </v-toolbar>
      </v-sheet>
      
      <v-sheet height="600">
        <v-calendar
          ref="calendar"
          v-model="focus"
          color="primary"
          :events="events"
          :type="type"
          :now="today"
          @click:event="showEvent"
          @click:more="viewDay"
          @click:date="viewDay"
        ></v-calendar>
        <v-menu
          v-model="selectedOpen"
          :close-on-content-click="false"
          :activator="selectedElement"
          offset-x
        >
          <v-card color="grey lighten-4" min-width="350px" flat>
            <v-toolbar :color="selectedEvent.color" dark>
              <v-btn icon>
                <v-icon
                >mdi-check</v-icon>
              </v-btn>
              <v-toolbar-title v-html="selectedEvent.name"></v-toolbar-title>
              <v-spacer></v-spacer>
            </v-toolbar>
            <v-card-text 
              v-for="(event, index) in events" :key="index"
              >
              {{ `${index}:${event['reference_number']}` }}
            </v-card-text>
            <v-card-actions>
              <v-btn text color="secondary" @click="selectedOpen = false">
                Close
              </v-btn>
            </v-card-actions>
          </v-card>
        </v-menu>
      </v-sheet>
    </v-card>
  </div>
</template>

<script>
import axios from 'axios'
export default {
  data() {
    return {
      today: new Date().toISOString().substr(0, 10),
      focus: new Date().toISOString().substr(0, 10),
      type: "month",
      typeToLabel: {
        month: "Month",
        week: "Week",
        day: "Day",
        "4day": "4 Days",
      },
      name: null,
      details: null,
      start: null,
      end: null,
      colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],
      currentLyEditing: null,
      selectedEvent: {},
      selectedElement: null,
      selectedOpen: false,
      events: [
        {

        }
      ],
      dialog: false,
      referenceNumber: ''
    };
  },
  computed: {

  },
  mounted() {
    this.getEvents();
  },
  methods: {
    getEvents() {
      const dateToday = new Date().toISOString().substr(0, 10);
      axios.post("http://murder-manila/api/dailyBookings", {
          book_date: dateToday,
        })
        .then((res) => {
          this.events = res.data.data;
          console.log(this.events)      
        });
    },
    showEvent ({ nativeEvent, event }) {
        const open = () => {
          this.selectedEvent = event
          this.selectedElement = nativeEvent.target
          setTimeout(() => {
            this.selectedOpen = true
          }, 10)
        }

        if (this.selectedOpen) {
          this.selectedOpen = false
          setTimeout(open, 10)
        } else {
          open()
        }

        nativeEvent.stopPropagation()
    },
    viewDay({ date }) {
      this.focus = date;
      this.type = "day";
    },
    setToday() {
      this.focus = this.today;
    },
    prev() {
      this.$refs.calendar.prev();
    },
    next() {
      this.$refs.calendar.next();
    },
  },
};
</script>





























DAY CALENDAR

<template>
  <div
    align="center"
  >
    <v-card
      width="1000"
    >
      <v-row class="fill-height">
        <v-col>
          <v-sheet height="64">
            <v-toolbar flat>
              <v-btn
                outlined
                class="mr-4"
                color="grey darken-2"
                @click="setToday"
              >
                Today
              </v-btn>
              <v-btn fab text small color="grey darken-2" @click="prev">
                <v-icon small> mdi-chevron-left </v-icon>
              </v-btn>
              <v-btn fab text small color="grey darken-2" @click="next">
                <v-icon small> mdi-chevron-right </v-icon>
              </v-btn>
              <v-toolbar-title v-if="$refs.calendar">
                {{ $refs.calendar.title }}
              </v-toolbar-title>
              <v-spacer></v-spacer>
            </v-toolbar>
          </v-sheet>
          <v-sheet height="600">
            <v-calendar
              ref="calendar"
              v-model="focus"
              color="primary"
              type="category"
              category-show-all
              :categories="categories"
              :events="events"
              :event-color="getEventColor"
              @change="fetchEvents"
            ></v-calendar>
          </v-sheet>
        </v-col>
      </v-row>
    </v-card>
  </div>
</template>

<script>
import axios from 'axios'
import moment from 'moment'
  export default {
    data: () => ({
      today: new Date().toISOString().substr(0, 10),
      focus: '',
      events: [],
      colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],
      names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],
      categories: ['John Smith', 'Tori Walker'],
    }),
    mounted () {
      this.$refs.calendar.checkChange()
      this.test()
    },
    methods: {
      getEventColor (event) {
        return event.color
      },
      setToday () {
        this.focus = ''
      },
      prev () {
        this.$refs.calendar.prev()
      },
      next () {
        this.$refs.calendar.next()
      },
      fetchEvents ({ start, end }) {
        const events = []
        const today = new Date().toISOString().substr(0, 10)
        // const min = new Date(`${start.date}T00:00:00`)
        // const max = new Date(`${end.date}T23:59:59`)
        // const days = (max.getTime() - min.getTime()) / 86400000
        // const eventCount = this.rnd(days, days + 20)
        axios.post('http://murder-manila/api/dailyBookings', {
          book_date: today
        })
          .then(res => {
            // events.push({
            //   name: 'Booking',
            //   start: res.data.data.book_time,
            //   end: res.data.data.end_time,
            //   color: this.colors[this.rnd(0, this.colors.length - 1)],
            //   category: res.data.data.name
            console.log(res.data.data)
            })
        // for (let i = 0; i < eventCount; i++) {
        //   const allDay = this.rnd(0, 3) === 0
        //   const firstTimestamp = this.rnd(min.getTime(), max.getTime())
        //   const first = new Date(firstTimestamp - (firstTimestamp % 900000))
        //   const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000
        //   const second = new Date(first.getTime() + secondTimestamp)

          // events.push({
          //   name: this.names[this.rnd(0, this.names.length - 1)],
          //   start: first,
          //   end: second,
          //   color: this.colors[this.rnd(0, this.colors.length - 1)],
          //   timed: !allDay,
          //   category: this.categories[this.rnd(0, this.categories.length - 1)],
          // })
        }

        // this.events = events
      },    
      rnd (a, b) {
        return Math.floor((b - a + 1) * Math.random()) + a
      },
    computed: {
      
    },
    created() {
      
    }
  }
</script>


























 $query = DB::connection('mysql')
                     ->table('booking_table as booking')
                     ->Select([
                        'booking.id as id',

                        'booking.reference_number as reference_number',
                        'booking.fname as fname',
                        'booking.lname as lname',
                        DB::raw("CONCAT(booking.fname,' ',booking.lname) as name"),
                        'booking.mobile_number as mobile_number',
                        'booking.email as email',
            
                        'theme.name as theme',
                      
                        DB::raw("DATE_FORMAT(booking.book_date, '%Y-%m-%d') as book_date"),
                        DB::raw("TIME_FORMAT(booking.book_time, '%H:%i') as start"),
                        DB::raw("TIME_FORMAT(booking.end_time, '%H:%i') as end"),
                        DB::raw("DATE_FORMAT(booking.expiration_date, '%M %d %Y') as expiration_date"),
                        'booking.venue as venue',
                        'booking.maxpax as maxpax',
            
                        'booking.initial_payment as Downpayment',
                        'booking.total_amount as Total_Amount',
                        'booking.is_paid as is_paid'
                        
                     ])
                     ->leftjoin('themes as theme', 'booking.theme_id', '=', 'theme.id')
                     ->where('book_date', $request->book_date)
                     ->orderBy('book_time', 'asc')
                     ->get();

                     $data = [];
                     foreach($query as $out){
                        $data[$out->id]=[
                            'name'                  => $out->fname.' '.$out->lname,
                            'reference_number'      => $out->reference_number,
                            'start'                 => $out->start,
                            'end'                   => $out->end,
                            'book_date'             => $out->book_date,
                            'theme'                 => $out->theme,
                            'maxpax'                => $out->maxpax,
                            'name'                  => $out->name,
                            'mobile_number'         => $out->mobile_number,
                            'email'                 => $out->email,
                            
                        ];  